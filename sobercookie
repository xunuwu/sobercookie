#!/usr/bin/env bash

#set -x # for debug mode
set -euo pipefail

sober_dir=~/.var/app/org.vinegarhq.Sober/data/sober/
sobercookie_dir="$XDG_DATA_HOME/sobercookie"
cookie_dir="$sobercookie_dir/cookies"
data_dir="$sobercookie_dir/data"
config_file="$XDG_CONFIG_HOME/sobercookie.conf"
sober_id="org.vinegarhq.Sober"
sober_cmd=(flatpak run "$sober_id")

## config options (change in your config file!)
config_launch_mode="multi" # [multi,kill,standard]

help_fn() {
   echo "available options are:"
   echo "launch [name] [--foreground] [sober arguments] -- launches sober using cookie"
   echo "save [name] -- save current sober cookie"
   echo "load [name] -- load cookie to sober"
   echo "rm [name] -- remove saved cookie"
   echo "unload -- log out of sober without invalidating cookie"
   echo "clean -- remove all cookies and configurations"
   echo "list [--show-hidden] -- list all saved cookies"
}

if [[ ! -v 1 ]]; then
   echo "no argument supplied"
   help_fn
   exit
fi

## load config (if it exists)
# shellcheck source=/dev/null
[[ -e "$config_file" ]] && . "$config_file"

if [[ ! -d "$sober_dir" ]]; then
   echo "\$sober_dir [$sober_dir] does not exist"
   exit
fi

for dir in "$cookie_dir" "$data_dir"; do
   if [[ ! -d "$dir" ]]; then
      read -rp "[$dir] does not exist, do you wish to create it? [Y/n]: " ans
      if [[ "$ans" == "y" || "$ans" == "Y" || "$ans" == "" ]]; then
         echo "creating $dir"
         mkdir -p "$dir"
      else
         echo "cannot continue without cookie directory"
         exit
      fi
   fi
done

save_fn() {
   if [[ ! -v 1 ]]; then
      echo "please supply the name you want to give to this cookie"
      exit
   fi
   cp "$sober_dir/cookies" "$cookie_dir/$1"
   echo "saved $1"
}

load_fn() {
   if [[ ! -v 1 ]]; then
      echo "please supply the name of the cookie you want to load"
      exit
   fi
   cp "$cookie_dir/$1" "$sober_dir/cookies"
}

list_fn() {
   ls -1 $([[ -v 1 && $1 == "--show-hidden" ]] && echo "-A") "$cookie_dir"
}

rm_fn() {
   if [[ ! -v 1 ]]; then
      echo "please supply the name of the cookie you want to remove"
      exit
   fi
   rm "$cookie_dir/$1"
}

unload_fn() {
   rm "$sober_dir/cookies"
   echo successfully unloaded cookie
}

clean_fn() {
   read -rp "are you sure you want to remove all saved cookies and configurations? [y/N]" ans
   if [[ "$ans" == "y" || "$ans" == "Y" ]]; then
      rm -r "$cookie_dir"
      echo "removed $cookie_dir"
      rm -r "$config_file"
      echo "removed $config_file"
   fi
}

launch_fn() {
   if [[ ! -v 1 ]]; then
      echo "please supply the name of the cookie you want to launch using"
      exit
   fi

   if [[ -e "$sober_dir/cookies" ]]; then
      saved=/tmp/tmp_saved_sober_cookie
      cp -f "$sober_dir/cookies" "$saved"
      # we just leave the cookie loaded after launching
      # it would be nice to find an elegant solution that doesnt change the loaded cookie
   fi

   if [[ $1 == "--foreground" ]]; then
      shift
      foreground=
   fi

   if [[ $1 != "default" ]]; then
      load_fn "$@"
   fi

   shift

   [[ $config_launch_mode == "multi" ]] && sober_cmd=( "sobercookie-noflock" "${sober_cmd[*]}" )
   [[ $config_launch_mode == "kill" ]] && { flatpak kill "$sober_id" || :; }

   if [[ -v foreground ]]; then
      "${sober_cmd[@]} $@"
   else
      "${sober_cmd[@]} $@" &>/dev/null &
   fi
}

case $1 in
   "save")   shift && save_fn   "$@" ;;
   "load")   shift && load_fn   "$@" ;;
   "list")   shift && list_fn   "$@" ;;
   "rm")     shift && rm_fn     "$@" ;;
   "unload") shift && unload_fn "$@" ;;
   "clean")  shift && clean_fn  "$@" ;;
   "launch") shift && launch_fn "$@" ;;
   *) help_fn ;;
esac
